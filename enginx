#!/bin/bash

# ENGINX - A script to output common information that is gathered when looking at nginx access logs.

# TO DO: 
	# Make sure dependencies are installed. <- DONE
		# nginx <- DONE
		# timegrep.py <- DONE
	# Make the interactive/standard switch
	# Get feedback for functionality
	# Clean up repeating functions
	# Lock down the path to access log <- DONE
	# Sudo warning

##### Constants

DATE=$(date +"%Y-%m-%d")
TITLE="NGINX ACCESS LOG INFORMATION FOR $DATE by $USER"
START_TIME="00:00:00"
END_TIME="00:00:00"
IP="127.0.0.1"
NGINX="/etc/init.d/nginx"
TIMEGREP="/usr/local/bin/timegrep"
##### Functions

nginx_dependency()
{
	echo -e "Checking if nginx is installed...\n"
	if [ -f $NGINX ]; then
		echo -e "Nginx is Installed!\n"
	else
		echo -e "Nginx is not installed! Exiting...\n"
		exit
	fi
}

timegrep_dependency()
{
	echo -e "Checking if timegrep is installed...\n"
	if [ -f $TIMEGREP ]; then
		echo -e "Timegrep is Installed!\n"
	else
		echo -e "Timegrep is not installed! 'sudo pip install timegrep' to install. Exiting...\n"
		exit
	fi
}

start_time()
{
	echo -e "Enter the start time in HH:MM:SS 24-Hour format > \c"
	read START_TIME
}

end_time()
{
	echo -e "Enter the end time in HH:MM:SS 24-Hour format > \c"
	read END_TIME
}

current_date()
{
	echo -e "Use today's date? (y/n) > \c"
	read response
	if [ "$response" != "y" ]; then
		echo -e "Enter the date in YYYY-MM-DD format > \c"
		read DATE
	fi
}

nginx_status()
{
	echo "NGINX SERVICE STATUS > "
	service nginx status
}

ip_count()
{
	echo "UNIQUE IP COUNT PER TIME PERIOD."
	find /home/b10c/qa_access_logs/ -type f -name '*.access.log' -exec /usr/local/bin/timegrep -d $DATE --start-time=$START_TIME --end-time=$END_TIME '{}' \; | awk '{print $1}' | sort | uniq -c | sort -rn | head -20
}

http_methods_count()
{
	echo "UNIQUE HTTP METHOD COUNT PER PERIOD."
	find /home/b10c/qa_access_logs/ -type f -name '*.access.log' -exec /usr/local/bin/timegrep -d $DATE --start-time=$START_TIME --end-time=$END_TIME '{}' \; | awk '{print $6}' | sort | uniq -c | sort -rn | head -20
}

requests_count()
{
	echo "UNIQUE REQUESTS PER PERIOD."
	find /home/b10c/qa_access_logs/ -type f -name '*.access.log' -exec /usr/local/bin/timegrep -d $DATE --start-time=$START_TIME --end-time=$END_TIME '{}' \; | awk '{print $7}' | sort | uniq -c | sort -rn | head -20
}

ip_specific_info()
{
	echo -e "Enter IP to target > \c"
	read IP
	echo "Using ipaddr: $IP"
	find /home/b10c/qa_access_logs/ -type f -name '*.access.log' -exec /usr/local/bin/timegrep -d $DATE --start-time=$START_TIME --end-time=$END_TIME '{}' \; | grep $IP
}

usage()
{
	echo "usage: enginx [[-d date] [-st start-time] [-et end-time] [-ip ip-addr] | [-h]]"
}

##### Main

echo $TITLE

start_time
end_time
current_date

selection=
until [ "$selection" = "0" ]; do
echo "
+---------------------------------------------------------------+
|               ENGINX INTERACTIVE MENU                         |
|---------------------------------------------------------------|
|       1 - Display nginx service status                        |
|       2 - Get unique IP count per time range                  |
|       3 - Get count of unique HTTP methods per time range     |
|       4 - Get count of unique requests per time range         |
|       5 - Get IP specific information                         |
|                                                               |
|       0 - Exit                                                |
+---------------------------------------------------------------+
"
echo -e "Enter selection > \c"
read selection
echo ""
case $selection in
	1 ) nginx_status ;;
	2 ) ip_count ;;
	3 ) http_methods_count ;;
	4 ) requests_count ;;
	5 ) ip_specific_info ;;
	0 ) exit ;;
	* ) usage ;;
esac
done
